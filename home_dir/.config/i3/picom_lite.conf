vsync = true;
backend = "glx";
glx-no-rebind-pixmap = true

corner-radius = 15;
rounded-corners-exclude = [
  "class_g = 'i3-frame'",
  "class_g = 'i3bar'",
  "class_g = 'plasmashell'",

  "window_type = 'combo'",
  "window_type = 'desktop'",
  # "window_type = 'dialog'",
  "window_type = 'dnd'",
  "window_type = 'dock'",
  "window_type = 'dropdown_menu'",
  "window_type = 'menu'",
  "window_type = 'notification'",
  "window_type = 'popup_menu'",
  "window_type = 'splash'",
  "window_type = 'toolbar'",
  "window_type = 'tooltip'",
  "window_type = 'unknown'",
  "window_type = 'utility'",

  # do not round for fullscreen(durty way)
  "width >= 1920 && height >= 1020"
];

#################################
#
# Window type settings
#
#################################
#
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard:
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility",
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu",
#     "tooltip", "notification", "combo", and "dnd".
#
# Following per window-type options are available: ::
#
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
#
#   opacity:::
#     Controls default opacity of the window type.
#
#   focus:::
#     Controls whether the window of this type is to be always considered focused.
#     (By default, all window types except "normal" and "dialog" has this on.)
#
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you
#     normally won't be able to see. Useful when the window has parts of it
#     transparent, and you want shadows in those areas.
#
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection,
#     you can set this to `true`.
#################################

wintypes:
{
    tooltip =
    {
        # fade: Fade the particular type of windows.
        fade = true;
        # shadow: Give those windows shadow
        shadow = false;
        # opacity: Default opacity for the type of windows.
        # opacity = 0.85;
        opacity = 1.00;
        # focus: Whether to always consider windows of this type focused.
        focus = true;
    };
    dock =
    {
        shadow = false;
    };
    normal =
    {
        shadow = true;
    };
    popup_menu =
    {
        fade = true;
        shadow = true;
        opacity = 0.9;
    };
    dropdown_menu =
    {
        fade = true;
        shadow = true;
        opacity = 0.9;
    };
    combo =
    {
        fade = true;
        shadow = true;
        opacity = 0.9;
    };
};

#################################
#
# Shadows
#
#################################


# Enabled client-side shadows on windows.
shadow = true;
# The blur radius for shadows. (default 12)
shadow-radius = 30;
# The left offset for shadows. (default -15)
shadow-offset-x = -18;
# The top offset for shadows. (default -15)
shadow-offset-y = -18;
# The translucency for shadows. (default .75)
shadow-opacity = 0.8;

# clear-shadow = true;
# shadow-radius = 10;
# shadow-offset-x = 5;
# shadow-offset-y = 5;

# Set if you want different colour shadows
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;

# The shadow exclude options are helpful if you have shadows enabled. Due to the way picom draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb are affected).
# This list includes all the affected apps I found in my testing. The "! name~=''" part excludes shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.
shadow-exclude = [
    # "!focused",
    "! name~=''",
    "name = 'Notification'",
    "name = 'Plank'",
    "name = 'Docky'",
    "name = 'Kupfer'",
    "name = 'xfce4-notifyd'",
    "name = 'cpt_frame_window'",
    # "name *= 'compton'",
    # "name *= 'picom'",
    "class_g = 'Firefox' && argb",
    "class_g = 'Conky'",
    "class_g = 'Kupfer'",
    "class_g = 'i3bar'",
    "class_g = 'Synapse'",
    "class_g ?= 'Notify-osd'",
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];
# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
shadow-ignore-shaped = true;

# Crop shadow of a window fully on a particular Xinerama screen to the screen.
xinerama-shadow-crop = true

# left side of the right monitor, fixed by 'xinerama-shadow-crop'
# shadow-exclude-reg = "40x1080+1920+0";

# bottom bar
shadow-exclude-reg = "x25+0-0";

# shadow-exclude-reg-list = [
#     "x25+0-0",
#     "40x1080+1920+0"
# ];
